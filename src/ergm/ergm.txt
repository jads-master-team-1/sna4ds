ERGM Modeling:

Literature:
  - Cranmer, S., & Desmarais, B. (2011). Inferential Network Analysis with
    Exponential Random Graph Models. Political Analysis, 19(1), 66-86.
    doi: 10.1093/pan/mpq037
      - Structural Effects:
          - asymmetric: Adds one network statistic to the model equal to the number
            of pairs of actors for which exactly one of (i,j) or (j,i) exists.
          - ctriple: Adds one statistic to the model, equal to the number of cyclic
            triples in the network, defined as a set of edges of the form {(i,j),
            (j,k), (k,i)}.
          - ttriple: Adds one statistic to the model, equal to the number of
            transitive triples in the network, defined as a set of edges {(i,j),
            (j,k), (i,k)}.

  - Cherepnalkoski, D., Karpf, A., Mozetič, I., & Grčar, M. (2016). Cohesion
    and Coalition Formation in the European Parliament: Roll-Call Votes and
    Twitter Activities. PLOS ONE, 11(11), e0166586.
    doi: 10.1371/journal.pone.0166586
      - Structural Effects:
          - edgecov: Adds one statistic to the model, equal to the sum of the
            covariate values for each edge appearing in the network.

  - Fischer, M., Varone, F., Gava, R., & Sciarini, P. (2019). How MPs ties to
    interest groups matter for legislative co-sponsorship. Social Networks, 57,
    34–42. https://doi.org/10.1016/j.socnet.2018.12.001
      - Structural Effects:
          - mutal: In binary ERGMs, equal to the number of pairs of actors i
            and j for which (i,j) and (j,i) both exist.
          - gwesp(decay = 0.5, fixed = TRUE): This term adds one network
            statistic to the model equal to the geometrically weighted dyadwise
            shared partner distribution with decay parameter decay parameter,
            which should be non-negative.
          - edgecov: Adds one statistic to the model, equal to the sum of the
            covariate values for each edge appearing in the network.

  - Leifeld, P., & Schneider, V. (2012). Information Exchange in Policy
    Networks. American Journal of Political Science, 56(3), 731–744.
    https://doi.org/10.1111/j.1540-5907.2011.00580.x
      - Structural Effects:
          - mutual: In binary ERGMs, equal to the number of pairs of actors i
            and j for which (i,j) and (j,i) both exist.
          - gwesp(0.1, fixed = TRUE): This term is just like gwdsp except it
            adds a statistic equal to the geometrically weighted edgewise (not
            dyadwise) shared partner distribution with decay parameter decay
            parameter, which should be non-negative.
          - gwdsp(0.1, fixed = TRUE): This term adds one network statistic to the
            model equal to the geometrically weighted dyadwise shared partner 
            distribution with decay parameter decay parameter, which should be
            non-negative.
          - edgecov: Adds one statistic to the model, equal to the sum of the
            covariate values for each edge appearing in the network.

Tips:
  - Check descriptives to specify structural terms
  - Increase sample size -> increase computation time
  - Decrease sample size -> model will run forever cannot fit model
  - Always specify iterations

Links:
  - https://cran.r-project.org/web/packages/ergm/vignettes/ergm-term-crossRef.html

Base Terms:
  - edges: CONVERGED

Structural Terms:
  - gwesp(decay = 0.25, fixed = TRUE): DEGENERATE (E1 / NO MAX ITER / 75min)
  - gwesp(decay = 0.25, fixed = FALSE): DEGENERATE (E1 / NO MAX ITER / 90min)
  - gwesp(decay = 0.1, fixed = TRUE): DEGENERATE (E1 / NO MAX ITER / 70min)
  - gwesp(decay = 0.1, fixed = FALSE): NOPROGRESS (E2 / NO MAX ITER / 180min)
  - gwdsp(decay = 1, fixed = TRUE): ??? (??? / ??? / 18:45)
  - gwdsp(decay = 1, fixed = FALSE): ??? (??? / ??? / ???)
  - gwdsp(decay = 0.25, fixed = TRUE): NOPROGRESS (E2 / NO MAX ITER / 195min)
  - gwdsp(decay = 0.25, fixed = FALSE): NOCONVERGE (E3 / MAX ITER / 18hr 30min)
  - gwdsp(decay = 0.1, fixed = TRUE): ??? (??? / ??? / ???)
  - gwdsp(decay = 0.1, fixed = FALSE): ??? (??? / ??? / ???)

  - triadcensus: ??? (??? / ??? / ???)
  - cycle(1): ??? (??? / ??? / ???)
  - cycle(2): ??? (??? / ??? / ???)
  - cycle(3): ??? (??? / ??? / ???)
  - esp(1): ??? (??? / ??? / ???)
  - esp(2): ??? (??? / ??? / ???)
  - esp(3): ??? (??? / ??? / ???)
  - dsp(1): ??? (??? / ??? / ???)
  - dsp(2): ??? (??? / ??? / ???)
  - dsp(3): ??? (??? / ??? / ???)

Errors:
  E1  Error in ergm.MCMLE(init, nw, model, initialfit = (initialfit <- NULL),  : 
        Number of edges in a simulated network exceeds that in the observed by a
        factor of more than 20. This is a strong indicator of model degeneracy or
        a very poor starting parameter configuration. If you are reasonably certain
        that neither of these is the case, increase the MCMLE.density.guard
        control.ergm() parameter.
        
        In addition: Warning messages:
          1: In mple.existence(pl) : The MPLE does not exist!
          2: In ergm.mple(nw, fd, m, MPLEtype = MPLEtype, init = init,
             control = control,  :
               glm.fit: fitted probabilities numerically 0 or 1 occurred

  E2  Starting maximum pseudolikelihood estimation (MPLE):
      Evaluating the predictor and response matrix.
      Maximizing the pseudolikelihood.
      Finished MPLE.
      Starting Monte Carlo maximum likelihood estimation (MCMLE):
      Iteration 1 of at most 60:
      ...

  E3  Iteration 60 of at most 60:
        Optimizing with step length 0.0010.
        The log-likelihood improved by 4.5442.
        Estimating equations are not within tolerance region.
      
      MCMLE estimation did not converge after 60 iterations. The estimated
      coefficients may not be accurate. Estimation may be resumed by passing the
      coefficients as initial values; see 'init' under ?control.ergm for details.
      
      Finished MCMLE.
        Evaluating log-likelihood at the estimate. Fitting the dyad-independent submodel...
        Bridging between the dyad-independent submodel and the full model...
        Setting up bridge sampling...
          Using 16 bridges: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 .
        Bridging finished.
      
      This model was fit using MCMC. To examine model diagnostics and check for
      degeneracy, use the mcmc.diagnostics() function.
      
      Warning messages:
        1: In term 'gwdsp': decay parameter 'decay' passed with 'fixed=FALSE'.
           'decay' will be ignored. To specify an initial value for 'decay', use
           the 'init' control parameter. 
        2: In term 'gwdsp': decay parameter 'decay' passed with 'fixed=FALSE'.
           'decay' will be ignored. To specify an initial value for 'decay', use
           the 'init' control parameter. 
        3: In term 'gwdsp': decay parameter 'decay' passed with 'fixed=FALSE'.
           'decay' will be ignored. To specify an initial value for 'decay', use
           the 'init' control parameter.
